Copyright 2016-2017 James Paul Turner.

This file is part of the MPFA library.

The MPFA library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published
by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

The MPFA library is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
License for more details.

You should have received a copy of the GNU Lesser General Public License
along with the MPFA library. If not, see <http://www.gnu.org/licenses/>.

For any copyright year range specified as YYYY-ZZZZ in this package,
note that the range specifies every single year in that closed interval.

##############################################################################


Introduction
============

The MPFA library (henceforth MPFA) is an arbitrary-precision affine
arithmetic library based on GNU MPFR. The main use-case of MPFA is to
maintain a computed upper and lower bound of numerical error for all
variables, at all times, throughout a computation.

Affine arithmetic is a variant of interval arithmetic which accounts for
variable correlations. As such, it does not suffer from the so-called
'dependency problem', where intervals grow overly large due to lack of
consideration for variable correlations. The problem is described further
at <https://en.wikipedia.org/wiki/Interval_arithmetic#Dependency_problem>.

MPFA implements affine arithmetic using a GNU MPFR backend. MPFR is an
arbitrary-precision floating-point library, meaning the floating-point
MPFR variables can be of arbitrary precision. For more information,
refer to the MPFR project website at <http://www.mpfr.org/>.

By implementing affine arithmetic with an arbitrary-precision backend,
one is able, for example, to test how a change in numerical precision
or integration scheme affects local and global error during a long
numerical simulation, without the interval 'explosion' problem regular
interval arithmetic suffers from.


Quickstart
==========

MPFA follows the familiar GNU/Linux software building paradigm. The
typical installation procedure consists of the following.

If installing from the Git source repository (i.e. not a dist tarball),
the configure script and other auxillary files need to be generated
by running the following command in the root of the repository:

    autoreconf -i -Wall

This generates the configuration files from the configure.ac and the
Makefile.am files (note that the GNU Autotools must be installed in
order to run autoreconf). Next run the configure, build and install
commands:

    ./configure
    make
    sudo make install

All installed MPFA files can be cleanly uninstalled from the system by
running the following command:

    sudo make uninstall

MPFA can be built to support MPFI interval variables. MPFI is an interval
arithmetic library built on top of GNU MPFR. Enable support by passing
--with-mpfi as a configure option (required for testing):

    ./configure --with-mpfi
    make
    sudo make install

Note that the MPFI package must already be installed correctly on the
system. See <http://perso.ens-lyon.fr/nathalie.revol/software.html> for
more information on the MPFI interval arithmetic library. If MPFA was
configured with MPFI support, a suite of test programs, for testing MPFA
functionality, can be executed with the following command:

    ./configure --with-mpfi
    make check


Contribute
==========

All contributions (e.g. bug reports, feature requests, expert knowledge,
source code and documentation) are gratefully received via the issue
tracker <https://github.com/jamesturner246/mpfa/issues>.

The source code repository for MPFA is hosted at GitHub. Clone it using:

    git clone https://github.com/jamesturner246/mpfa
